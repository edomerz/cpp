
q26_test:     file format elf64-x86-64


Disassembly of section .init:

00000000004006a0 <_init>:
  4006a0:	48 83 ec 08          	sub    $0x8,%rsp
  4006a4:	48 8b 05 4d 09 20 00 	mov    0x20094d(%rip),%rax        # 600ff8 <_DYNAMIC+0x200>
  4006ab:	48 85 c0             	test   %rax,%rax
  4006ae:	74 05                	je     4006b5 <_init+0x15>
  4006b0:	e8 2b 00 00 00       	callq  4006e0 <__gmon_start__@plt>
  4006b5:	48 83 c4 08          	add    $0x8,%rsp
  4006b9:	c3                   	retq   

Disassembly of section .plt:

00000000004006c0 <std::ostream::operator<<(int)@plt-0x10>:
  4006c0:	ff 35 42 09 20 00    	pushq  0x200942(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4006c6:	ff 25 44 09 20 00    	jmpq   *0x200944(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4006cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004006d0 <std::ostream::operator<<(int)@plt>:
  4006d0:	ff 25 42 09 20 00    	jmpq   *0x200942(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4006d6:	68 00 00 00 00       	pushq  $0x0
  4006db:	e9 e0 ff ff ff       	jmpq   4006c0 <_init+0x20>

00000000004006e0 <__gmon_start__@plt>:
  4006e0:	ff 25 3a 09 20 00    	jmpq   *0x20093a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  4006e6:	68 01 00 00 00       	pushq  $0x1
  4006eb:	e9 d0 ff ff ff       	jmpq   4006c0 <_init+0x20>

00000000004006f0 <std::ios_base::Init::Init()@plt>:
  4006f0:	ff 25 32 09 20 00    	jmpq   *0x200932(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  4006f6:	68 02 00 00 00       	pushq  $0x2
  4006fb:	e9 c0 ff ff ff       	jmpq   4006c0 <_init+0x20>

0000000000400700 <__libc_start_main@plt>:
  400700:	ff 25 2a 09 20 00    	jmpq   *0x20092a(%rip)        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400706:	68 03 00 00 00       	pushq  $0x3
  40070b:	e9 b0 ff ff ff       	jmpq   4006c0 <_init+0x20>

0000000000400710 <__cxa_atexit@plt>:
  400710:	ff 25 22 09 20 00    	jmpq   *0x200922(%rip)        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400716:	68 04 00 00 00       	pushq  $0x4
  40071b:	e9 a0 ff ff ff       	jmpq   4006c0 <_init+0x20>

0000000000400720 <std::ios_base::Init::~Init()@plt>:
  400720:	ff 25 1a 09 20 00    	jmpq   *0x20091a(%rip)        # 601040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400726:	68 05 00 00 00       	pushq  $0x5
  40072b:	e9 90 ff ff ff       	jmpq   4006c0 <_init+0x20>

0000000000400730 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>:
  400730:	ff 25 12 09 20 00    	jmpq   *0x200912(%rip)        # 601048 <_GLOBAL_OFFSET_TABLE_+0x48>
  400736:	68 06 00 00 00       	pushq  $0x6
  40073b:	e9 80 ff ff ff       	jmpq   4006c0 <_init+0x20>

0000000000400740 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>:
  400740:	ff 25 0a 09 20 00    	jmpq   *0x20090a(%rip)        # 601050 <_GLOBAL_OFFSET_TABLE_+0x50>
  400746:	68 07 00 00 00       	pushq  $0x7
  40074b:	e9 70 ff ff ff       	jmpq   4006c0 <_init+0x20>

Disassembly of section .text:

0000000000400750 <__cxx_global_var_init>:
  400750:	55                   	push   %rbp
  400751:	48 89 e5             	mov    %rsp,%rbp
  400754:	48 83 ec 10          	sub    $0x10,%rsp
  400758:	48 8d 3c 25 94 11 60 	lea    0x601194,%rdi
  40075f:	00 
  400760:	e8 8b ff ff ff       	callq  4006f0 <std::ios_base::Init::Init()@plt>
  400765:	48 8d 3c 25 20 07 40 	lea    0x400720,%rdi
  40076c:	00 
  40076d:	48 8d 34 25 94 11 60 	lea    0x601194,%rsi
  400774:	00 
  400775:	48 8d 14 25 60 10 60 	lea    0x601060,%rdx
  40077c:	00 
  40077d:	e8 8e ff ff ff       	callq  400710 <__cxa_atexit@plt>
  400782:	89 45 fc             	mov    %eax,-0x4(%rbp)
  400785:	48 83 c4 10          	add    $0x10,%rsp
  400789:	5d                   	pop    %rbp
  40078a:	c3                   	retq   
  40078b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400790 <global constructors keyed to a>:
  400790:	55                   	push   %rbp
  400791:	48 89 e5             	mov    %rsp,%rbp
  400794:	e8 b7 ff ff ff       	callq  400750 <__cxx_global_var_init>
  400799:	5d                   	pop    %rbp
  40079a:	c3                   	retq   

000000000040079b <_start>:
  40079b:	31 ed                	xor    %ebp,%ebp
  40079d:	49 89 d1             	mov    %rdx,%r9
  4007a0:	5e                   	pop    %rsi
  4007a1:	48 89 e2             	mov    %rsp,%rdx
  4007a4:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4007a8:	50                   	push   %rax
  4007a9:	54                   	push   %rsp
  4007aa:	49 c7 c0 40 0a 40 00 	mov    $0x400a40,%r8
  4007b1:	48 c7 c1 d0 09 40 00 	mov    $0x4009d0,%rcx
  4007b8:	48 c7 c7 40 09 40 00 	mov    $0x400940,%rdi
  4007bf:	e8 3c ff ff ff       	callq  400700 <__libc_start_main@plt>
  4007c4:	f4                   	hlt    
  4007c5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4007cc:	00 00 00 
  4007cf:	90                   	nop

00000000004007d0 <deregister_tm_clones>:
  4007d0:	b8 6f 10 60 00       	mov    $0x60106f,%eax
  4007d5:	55                   	push   %rbp
  4007d6:	48 2d 68 10 60 00    	sub    $0x601068,%rax
  4007dc:	48 83 f8 0e          	cmp    $0xe,%rax
  4007e0:	48 89 e5             	mov    %rsp,%rbp
  4007e3:	77 02                	ja     4007e7 <deregister_tm_clones+0x17>
  4007e5:	5d                   	pop    %rbp
  4007e6:	c3                   	retq   
  4007e7:	b8 00 00 00 00       	mov    $0x0,%eax
  4007ec:	48 85 c0             	test   %rax,%rax
  4007ef:	74 f4                	je     4007e5 <deregister_tm_clones+0x15>
  4007f1:	5d                   	pop    %rbp
  4007f2:	bf 68 10 60 00       	mov    $0x601068,%edi
  4007f7:	ff e0                	jmpq   *%rax
  4007f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400800 <register_tm_clones>:
  400800:	b8 68 10 60 00       	mov    $0x601068,%eax
  400805:	55                   	push   %rbp
  400806:	48 2d 68 10 60 00    	sub    $0x601068,%rax
  40080c:	48 c1 f8 03          	sar    $0x3,%rax
  400810:	48 89 e5             	mov    %rsp,%rbp
  400813:	48 89 c2             	mov    %rax,%rdx
  400816:	48 c1 ea 3f          	shr    $0x3f,%rdx
  40081a:	48 01 d0             	add    %rdx,%rax
  40081d:	48 d1 f8             	sar    %rax
  400820:	75 02                	jne    400824 <register_tm_clones+0x24>
  400822:	5d                   	pop    %rbp
  400823:	c3                   	retq   
  400824:	ba 00 00 00 00       	mov    $0x0,%edx
  400829:	48 85 d2             	test   %rdx,%rdx
  40082c:	74 f4                	je     400822 <register_tm_clones+0x22>
  40082e:	5d                   	pop    %rbp
  40082f:	48 89 c6             	mov    %rax,%rsi
  400832:	bf 68 10 60 00       	mov    $0x601068,%edi
  400837:	ff e2                	jmpq   *%rdx
  400839:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400840 <__do_global_dtors_aux>:
  400840:	80 3d 49 09 20 00 00 	cmpb   $0x0,0x200949(%rip)        # 601190 <completed.6973>
  400847:	75 11                	jne    40085a <__do_global_dtors_aux+0x1a>
  400849:	55                   	push   %rbp
  40084a:	48 89 e5             	mov    %rsp,%rbp
  40084d:	e8 7e ff ff ff       	callq  4007d0 <deregister_tm_clones>
  400852:	5d                   	pop    %rbp
  400853:	c6 05 36 09 20 00 01 	movb   $0x1,0x200936(%rip)        # 601190 <completed.6973>
  40085a:	f3 c3                	repz retq 
  40085c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400860 <frame_dummy>:
  400860:	48 83 3d 88 05 20 00 	cmpq   $0x0,0x200588(%rip)        # 600df0 <__JCR_END__>
  400867:	00 
  400868:	74 1e                	je     400888 <frame_dummy+0x28>
  40086a:	b8 00 00 00 00       	mov    $0x0,%eax
  40086f:	48 85 c0             	test   %rax,%rax
  400872:	74 14                	je     400888 <frame_dummy+0x28>
  400874:	55                   	push   %rbp
  400875:	bf f0 0d 60 00       	mov    $0x600df0,%edi
  40087a:	48 89 e5             	mov    %rsp,%rbp
  40087d:	ff d0                	callq  *%rax
  40087f:	5d                   	pop    %rbp
  400880:	e9 7b ff ff ff       	jmpq   400800 <register_tm_clones>
  400885:	0f 1f 00             	nopl   (%rax)
  400888:	e9 73 ff ff ff       	jmpq   400800 <register_tm_clones>
  40088d:	0f 1f 00             	nopl   (%rax)

0000000000400890 <Foo(X)>:
  400890:	55                   	push   %rbp
  400891:	48 89 e5             	mov    %rsp,%rbp
  400894:	48 83 ec 20          	sub    $0x20,%rsp
  400898:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  40089c:	89 7d f8             	mov    %edi,-0x8(%rbp)
  40089f:	48 89 c7             	mov    %rax,%rdi
  4008a2:	e8 e9 00 00 00       	callq  400990 <X::GetNum() const>
  4008a7:	48 8d 3c 25 80 10 60 	lea    0x601080,%rdi
  4008ae:	00 
  4008af:	89 c6                	mov    %eax,%esi
  4008b1:	e8 1a fe ff ff       	callq  4006d0 <std::ostream::operator<<(int)@plt>
  4008b6:	48 8d 34 25 40 07 40 	lea    0x400740,%rsi
  4008bd:	00 
  4008be:	48 89 c7             	mov    %rax,%rdi
  4008c1:	e8 6a fe ff ff       	callq  400730 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  4008c6:	48 8d 7d f8          	lea    -0x8(%rbp),%rdi
  4008ca:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4008ce:	e8 cd 00 00 00       	callq  4009a0 <X::operator int() const>
  4008d3:	48 8d 3c 25 80 10 60 	lea    0x601080,%rdi
  4008da:	00 
  4008db:	89 c6                	mov    %eax,%esi
  4008dd:	e8 ee fd ff ff       	callq  4006d0 <std::ostream::operator<<(int)@plt>
  4008e2:	48 8d 34 25 40 07 40 	lea    0x400740,%rsi
  4008e9:	00 
  4008ea:	48 89 c7             	mov    %rax,%rdi
  4008ed:	e8 3e fe ff ff       	callq  400730 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  4008f2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4008f6:	48 83 c4 20          	add    $0x20,%rsp
  4008fa:	5d                   	pop    %rbp
  4008fb:	c3                   	retq   
  4008fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400900 <Bar(int)>:
  400900:	55                   	push   %rbp
  400901:	48 89 e5             	mov    %rsp,%rbp
  400904:	48 83 ec 10          	sub    $0x10,%rsp
  400908:	48 8d 04 25 80 10 60 	lea    0x601080,%rax
  40090f:	00 
  400910:	89 7d fc             	mov    %edi,-0x4(%rbp)
  400913:	8b 75 fc             	mov    -0x4(%rbp),%esi
  400916:	48 89 c7             	mov    %rax,%rdi
  400919:	e8 b2 fd ff ff       	callq  4006d0 <std::ostream::operator<<(int)@plt>
  40091e:	48 8d 34 25 40 07 40 	lea    0x400740,%rsi
  400925:	00 
  400926:	48 89 c7             	mov    %rax,%rdi
  400929:	e8 02 fe ff ff       	callq  400730 <std::ostream::operator<<(std::ostream& (*)(std::ostream&))@plt>
  40092e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400932:	48 83 c4 10          	add    $0x10,%rsp
  400936:	5d                   	pop    %rbp
  400937:	c3                   	retq   
  400938:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40093f:	00 

0000000000400940 <main>:
  400940:	55                   	push   %rbp
  400941:	48 89 e5             	mov    %rsp,%rbp
  400944:	48 83 ec 10          	sub    $0x10,%rsp
  400948:	48 8d 7d f8          	lea    -0x8(%rbp),%rdi
  40094c:	be 02 00 00 00       	mov    $0x2,%esi
  400951:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  400958:	e8 53 00 00 00       	callq  4009b0 <X::X(int)>
  40095d:	8b 7d f8             	mov    -0x8(%rbp),%edi
  400960:	e8 2b ff ff ff       	callq  400890 <Foo(X)>
  400965:	48 8d 7d f0          	lea    -0x10(%rbp),%rdi
  400969:	be 03 00 00 00       	mov    $0x3,%esi
  40096e:	e8 3d 00 00 00       	callq  4009b0 <X::X(int)>
  400973:	48 8d 7d f0          	lea    -0x10(%rbp),%rdi
  400977:	e8 24 00 00 00       	callq  4009a0 <X::operator int() const>
  40097c:	89 c7                	mov    %eax,%edi
  40097e:	e8 7d ff ff ff       	callq  400900 <Bar(int)>
  400983:	b8 00 00 00 00       	mov    $0x0,%eax
  400988:	48 83 c4 10          	add    $0x10,%rsp
  40098c:	5d                   	pop    %rbp
  40098d:	c3                   	retq   
  40098e:	66 90                	xchg   %ax,%ax

0000000000400990 <X::GetNum() const>:
  400990:	55                   	push   %rbp
  400991:	48 89 e5             	mov    %rsp,%rbp
  400994:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  400998:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  40099c:	8b 07                	mov    (%rdi),%eax
  40099e:	5d                   	pop    %rbp
  40099f:	c3                   	retq   

00000000004009a0 <X::operator int() const>:
  4009a0:	55                   	push   %rbp
  4009a1:	48 89 e5             	mov    %rsp,%rbp
  4009a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4009a8:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  4009ac:	8b 07                	mov    (%rdi),%eax
  4009ae:	5d                   	pop    %rbp
  4009af:	c3                   	retq   

00000000004009b0 <X::X(int)>:
  4009b0:	55                   	push   %rbp
  4009b1:	48 89 e5             	mov    %rsp,%rbp
  4009b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4009b8:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4009bb:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  4009bf:	8b 75 f4             	mov    -0xc(%rbp),%esi
  4009c2:	89 37                	mov    %esi,(%rdi)
  4009c4:	5d                   	pop    %rbp
  4009c5:	c3                   	retq   
  4009c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4009cd:	00 00 00 

00000000004009d0 <__libc_csu_init>:
  4009d0:	41 57                	push   %r15
  4009d2:	41 89 ff             	mov    %edi,%r15d
  4009d5:	41 56                	push   %r14
  4009d7:	49 89 f6             	mov    %rsi,%r14
  4009da:	41 55                	push   %r13
  4009dc:	49 89 d5             	mov    %rdx,%r13
  4009df:	41 54                	push   %r12
  4009e1:	4c 8d 25 f0 03 20 00 	lea    0x2003f0(%rip),%r12        # 600dd8 <__frame_dummy_init_array_entry>
  4009e8:	55                   	push   %rbp
  4009e9:	48 8d 2d f8 03 20 00 	lea    0x2003f8(%rip),%rbp        # 600de8 <__init_array_end>
  4009f0:	53                   	push   %rbx
  4009f1:	4c 29 e5             	sub    %r12,%rbp
  4009f4:	31 db                	xor    %ebx,%ebx
  4009f6:	48 c1 fd 03          	sar    $0x3,%rbp
  4009fa:	48 83 ec 08          	sub    $0x8,%rsp
  4009fe:	e8 9d fc ff ff       	callq  4006a0 <_init>
  400a03:	48 85 ed             	test   %rbp,%rbp
  400a06:	74 1e                	je     400a26 <__libc_csu_init+0x56>
  400a08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400a0f:	00 
  400a10:	4c 89 ea             	mov    %r13,%rdx
  400a13:	4c 89 f6             	mov    %r14,%rsi
  400a16:	44 89 ff             	mov    %r15d,%edi
  400a19:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  400a1d:	48 83 c3 01          	add    $0x1,%rbx
  400a21:	48 39 eb             	cmp    %rbp,%rbx
  400a24:	75 ea                	jne    400a10 <__libc_csu_init+0x40>
  400a26:	48 83 c4 08          	add    $0x8,%rsp
  400a2a:	5b                   	pop    %rbx
  400a2b:	5d                   	pop    %rbp
  400a2c:	41 5c                	pop    %r12
  400a2e:	41 5d                	pop    %r13
  400a30:	41 5e                	pop    %r14
  400a32:	41 5f                	pop    %r15
  400a34:	c3                   	retq   
  400a35:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  400a3c:	00 00 00 00 

0000000000400a40 <__libc_csu_fini>:
  400a40:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400a44 <_fini>:
  400a44:	48 83 ec 08          	sub    $0x8,%rsp
  400a48:	48 83 c4 08          	add    $0x8,%rsp
  400a4c:	c3                   	retq   
